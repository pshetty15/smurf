#!/bin/bash
# SNARF MCP Setup Script

set -e

echo "🚀 Setting up SNARF MCP Server..."

# Check for .env file
if [ ! -f .env ]; then
    echo "❌ .env file not found!"
    echo "📝 Creating from template..."
    cp .env.example .env
    echo "⚠️  Please edit .env and add your OPENAI_API_KEY"
    exit 1
fi

# Check if OPENAI_API_KEY is set
if ! grep -q "OPENAI_API_KEY=sk-" .env; then
    echo "❌ OPENAI_API_KEY not set in .env file!"
    echo "Please add your OpenAI API key to the .env file"
    exit 1
fi

echo "✅ Environment configured"

# Build and start containers
echo "🐳 Building Docker containers..."
docker-compose build

echo "🚀 Starting SNARF services..."
docker-compose up -d postgres redis

# Wait for PostgreSQL to be ready
echo "⏳ Waiting for PostgreSQL to be ready..."
sleep 10

# Start the MCP server
echo "🎮 Starting SNARF MCP server..."
docker-compose up -d snarf-mcp

# Check if MCP server is running
sleep 5
if docker-compose ps snarf-mcp | grep -q "Up"; then
    echo "✅ SNARF MCP server is running!"
else
    echo "❌ Failed to start MCP server"
    docker-compose logs snarf-mcp
    exit 1
fi

echo ""
echo "🎉 SNARF MCP Server is ready!"
echo ""
echo "📋 To use with Cursor IDE:"
echo "1. Copy this MCP configuration to your Cursor settings:"
echo ""
cat mcp-config.json
echo ""
echo "2. Or use the local MCP runner:"
echo "   npx @modelcontextprotocol/inspector"
echo ""
echo "📊 Available tools:"
echo "   - snarf <url>         : Index content from URL"
echo "   - snarf_search <query>: Search indexed content"
echo "   - snarf_sources       : List all indexed sources"
echo ""
echo "📡 Other services:"
echo "   - API Server: http://localhost:8080"
echo "   - Interactive CLI: docker-compose exec snarf-app python main.py"
echo ""
echo "📚 Examples:"
echo '   snarf "https://docs.python.org/3/tutorial/"'
echo '   snarf "https://github.com/fastapi/fastapi"'
echo '   snarf_search "python async functions"'
echo ""
echo "🛑 To stop: docker-compose down"
echo "📜 View logs: docker-compose logs -f snarf-mcp"